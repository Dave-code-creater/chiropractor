version: '3.8'

services:
  # Main Application - Chiropractor Clinic Management System
  app:
    build: .
    container_name: chiropractor-clinic-app
    env_file:
      - .env
    environment:
      # Only override Docker-specific hostnames
      - DB_HOST=postgres
      - REDIS_HOST=redis
    ports:
      - "${PORT:-3000}:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    networks:
      - clinic-network
    restart: unless-stopped

  # PostgreSQL Database - Patient & Clinic Data
  postgres:
    image: postgres:15-alpine
    container_name: chiropractor-postgres-db
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASS:-password}
      - POSTGRES_DB=${DB_NAME:-chiropractor_clinic}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d:ro
    networks:
      - clinic-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-chiropractor_clinic}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis - Sessions, Caching & Real-time Features
  redis:
    image: redis:7-alpine
    container_name: chiropractor-redis-cache
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - clinic-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  clinic-network:
    driver: bridge
